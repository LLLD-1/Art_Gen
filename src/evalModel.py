import torch

############################################################
############################################################
#! MODEL
############################################################
############################################################
class EvalModel(torch.nn.Module):
    def __init__(self, *args, **kwargs) -> None:
        super().__init__(*args, **kwargs)

    def forward():
        pass

############################################################
############################################################
#! HELPERS
############################################################
############################################################
def evaluate(dataset, batch_size, device):
    pass

def train(dataset, epochs, batch_size, device):
    pass

def plot_loss(train_loss_history, val_loss_history):
    pass

def plot_accuracy(train_loss_history, val_loss_history):
    pass
############################################################
############################################################
#! DATASET
############################################################
############################################################

############################################################
############################################################
#! TRAINING
############################################################
############################################################

# Load the embeddings model

device = 'cuda'
lr = 0.001
batch_size = 16

############################################################
############################################################
#! EVALUATION
############################################################
############################################################

#plot_loss_history